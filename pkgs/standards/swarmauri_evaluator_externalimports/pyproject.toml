[project]
name = "swarmauri_evaluator_externalimports"
version = "0.1.0"
description = "Evaluator that detects and penalizes non-built-in Python imports in source files"
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/swarmauri/swarmauri-sdk/pkgs/standards/swarmauri_evaluator_externalimports/"
requires-python = ">=3.10,<3.13"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha"
]
authors = [
    {name = "SwarmAuri Team", email = "info@swarmauri.com"}
]
keywords = [
    "swarmauri",
    "evaluator",
    "imports",
    "dependencies",
    "static analysis",
    "code quality",
    "external modules",
    "standard library"
]
dependencies = [
    "swarmauri_core==*",
    "swarmauri_base==*",
    "logging==*"
]

[project.entry-points.'swarmauri.evaluators']
ExternalImportsEvaluator = "swarmauri_evaluator_externalimports:ExternalImportsEvaluator"

[tool.uv.sources]
swarmauri_core = { workspace = true }
swarmauri_base = { workspace = true }

[tool.pytest.ini_options]
markers = [
    "unit: Unit tests",
    "i9n: Integration tests",
    "r8n: Regression tests",
    "xfail: Expected failures",
    "xpass: Expected passes"
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_default_fixture_loop_scope = "function"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist>=3.6.1",
    "pytest-json-report>=1.5.0",
    "python-dotenv>=0.21.0",
    "requests>=2.32.3",
    "flake8>=7.0",
    "black>=24.1.0",
    "mypy>=1.8.0"
]