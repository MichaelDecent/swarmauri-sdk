[tool.poetry]
name = "swarmauri-monorepo"
version = "0.6.0.dev1"
description = "Monorepo for multiple interdependent Swarmauri Python packages"
authors = ["Jacob Stewart <jacob@swarmauri.com>"]
# Disables packaging mode
package-mode = false


[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pydantic = "^2.0"

# Path dependencies (editable installs by default)
swarmauri_core = { path = "./core" }
swarmauri_base = { path = "./base" }
swarmauri = { path = "./swarmauri" }
swarmauri_standard = { path = "./standards/swarmauri_standard", extras=["full"] }

# Extra First Class Citizens
swarmauri_vectorstore_doc2vec = { path = "./standards/swarmauri_doc2vec_vectorstore", optional = true }
swarmauri_embedding_doc2vec = { path = "./standards/swarmauri_doc2vec_embedding", optional = true }
swarmauri_tool_matplotlib = { path = "./standards/swarmauri_matplotlib_tool", optional = true }
swarmauri_parser_keywordextractor = { path = "./standards/swarmauri_keywordextractor_parser", optional = true }
swarmauri_vectorstore_tfidf = { path = "./standards/swarmauri_tfidf_vectorstore", optional = true }
swarmauri_embedding_tfidf = { path = "./standards/swarmauri_tfidf_embedding", optional = true }
swarmauri_embedding_nmf = { path = "./standards/swarmauri_nmf_embedding", optional = true }
swarmauri_parser_beautifulsoupelement = { path = "./standards/swarmauri_beautifulsoupelement_parser", optional = true }
swarmauri_distance_minkowski = { path = "./standards/swarmauri_minkowski_distance", optional = true }

# Standard Plugin Example
swm_example_package = { path = "./standards/swm_example_package" }

# Community Packages (will push out later)
swarmauri_community = { path = "./community/swarmauri_community", extras=["full"] }
swm_example_community_package = { path = "./community/swm_example_community_package" }

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
black = "^22.3.0"
toml = "^0.10.2"
#monorepo_manager = { git = "https://github.com/swarmauri/swarmauri-sdk", branch = "mono/0.6.0.dev1", subdirectory="pkgs/tooling/monorepo_manager" }


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

