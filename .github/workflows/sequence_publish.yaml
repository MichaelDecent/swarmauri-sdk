name: Publish Swarmauri Packages in Sequence

on:
  push:
    tags: ["v*"]
    paths:
      - 'pkgs/swarmauri_core/**'
      - 'pkgs/swarmauri/**'
      - 'pkgs/swarmauri_community/**'
      - 'pkgs/swarmauri_experimental/**'
  workflow_dispatch:

jobs:
  publish-swarmauri-core:
    runs-on: self-hosted
    env:
      UNIQUE_VENV_PATH: "${{ github.workspace }}/.venv_core_${{ github.run_id }}"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Build and Publish swarmauri_core
        run: |
          python -m venv $UNIQUE_VENV_PATH
          source $UNIQUE_VENV_PATH/bin/activate
          cd pkgs/core
          poetry install --no-cache -vv --all-extras
          poetry build
          poetry publish --username __token__ --password "${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}"
        env:
          PYPI_API_TOKEN: ${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}

      - name: Clean up virtual environment
        if: always()
        run: |
          rm -rf ${{ env.UNIQUE_VENV_PATH }}

  publish-swarmauri:
    needs: publish-swarmauri-core
    runs-on: self-hosted
    env:
      UNIQUE_VENV_PATH: "${{ github.workspace }}/.venv_swarmauri_${{ github.run_id }}"

    steps:
      - uses: actions/checkout@v4

      - name: Wait for swarmauri_core
        run: sleep 60

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Build and Publish swarmauri
        run: |
          python -m venv $UNIQUE_VENV_PATH
          source $UNIQUE_VENV_PATH/bin/activate
          cd pkgs/swarmauri
          poetry install --no-cache -vv --all-extras
          poetry build
          poetry publish --username __token__ --password "${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}"
        env:
          PYPI_API_TOKEN: ${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}

      - name: Clean up virtual environment
        if: always()
        run: |
          rm -rf ${{ env.UNIQUE_VENV_PATH }}

  publish-swarmauri-community:
    needs: publish-swarmauri
    runs-on: self-hosted
    env:
      UNIQUE_VENV_PATH: "${{ github.workspace }}/.venv_community_${{ github.run_id }}"

    steps:
      - uses: actions/checkout@v4

      - name: Wait for swarmauri
        run: sleep 120

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Build and Publish swarmauri_community
        run: |
          python -m venv $UNIQUE_VENV_PATH
          source $UNIQUE_VENV_PATH/bin/activate
          cd pkgs/community
          poetry install --no-cache -vv --all-extras
          poetry build
          poetry publish --username __token__ --password "${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}"
        env:
          PYPI_API_TOKEN: ${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}
          
      - name: Clean up virtual environment
        if: always()
        run: |
          rm -rf ${{ env.UNIQUE_VENV_PATH }}

  publish-swarmauri-experimental:
    needs: publish-swarmauri-community
    runs-on: self-hosted
    env:
      UNIQUE_VENV_PATH: "${{ github.workspace }}/.venv_experimental_${{ github.run_id }}"

    steps:
      - uses: actions/checkout@v4

      - name: Wait for swarmauri_community
        run: sleep 60

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Build and Publish swarmauri_experimental
        run: |
          python -m venv $UNIQUE_VENV_PATH
          source $UNIQUE_VENV_PATH/bin/activate
          cd pkgs/experimental
          poetry install --no-cache -vv --all-extras
          poetry build
          poetry publish --username __token__ --password "${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}"
        env:
          PYPI_API_TOKEN: ${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}

      - name: Clean up virtual environment
        if: always()
        run: |
          rm -rf ${{ env.UNIQUE_VENV_PATH }}
